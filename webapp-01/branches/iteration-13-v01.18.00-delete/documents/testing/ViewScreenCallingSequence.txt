	Controller.doGet()
	-->Controller.processRequest()
		-->ControllerHelper.processRequest()
			-->ActionFactory.createAction()
		   	-->Action:ScreenAction:ViewScreen.perform()
1     			-->ScreenBeanManager.getScreen()
	      		-->ScreensEntity.getScreenDisplayType()
				-->ScreenDataFactory.getScreenData()
				-->ScreenData:MistressScreenData.Mistress03ScreenData.setScreenData()
			   		-->HttpServletRequest.getServletContext()
					-->ServletContext.getAttribute() [Get configuration data from context]
1					-->ScreenBeanManager.getScreen()
					-->ScreensEntity.getScreenContents()
					-->MarkdownProcessor.markDown()
					-->ScreensEntity[this.screen].setScreenContents()
					-->ScreensEntity[this.screen].setMetaDescription()
					-->ScreensEntity[this.screen].setScreenTitleLong()
					-->ScreensEntity[this.screen].setScreenTitleShort()
					-->ScreensEntity[screenRecord].getGalleryFlag()
					-->ServletContext.getAttribute() [get GalleryManager]
					-->GalleryManager:GalleryManagerDefault.getGallery()
						-->GalleryManagerDefault.isGalleryExist()
						-->GalleryManagerDefault.addGallery()
							-->GalleryDefault()
								-->File.exists [check gallery folder exists]
								-->GalleryDefault.initialiseGallery()
									-->GalleryDefault.createGalleryImageList()
									-->GalleryDefault.createThumbnailFolder()
									-->GalleryDefault.deleteAllThumbnails[A]()
										-->FileUtils.cleanDirectory()
									-->GalleryDefault.createAllThumbnails()
   						-->GalleryManagerDefault.isGalleryExist()
						-->Map<String,Gallery>.get()
					-->Gallery.getHtml()
						-->GalleryHtmlGenerator:GalleryCarouselHtmlGenerator.getHtml()
							-->List<GalleryImages>.size()
							-->GalleryHtmlGenerator:GalleryCarouselHtmlGenerator.addLItoULelement()
					-->ScreenData:MistressScreenData.Mistress03ScreenData.setGalleryHtml()
				-->HttpServletRequest.setAttribute()
			-->RequestDispatcher.forward()